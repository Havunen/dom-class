{"name":"Dom-class","tagline":"Custom Elements through JS","body":"dom-class [![build status](https://secure.travis-ci.org/WebReflection/dom-class.svg)](http://travis-ci.org/WebReflection/dom-class)\r\n=========\r\n\r\nBuilt on top of [es-class](https://github.com/WebReflection/es-class#es-class-), and integrating handy [restyle](https://github.com/WebReflection/restyle#restyle) features, `DOMClass` is a lightweight, cross browser, simplification of [WebComponents](http://www.w3.org/standards/techs/components#w3c_all).\r\n\r\n\r\n### How To\r\nAll [es-class features](https://github.com/WebReflection/es-class#features-example) are included, and the `constructor` will be automatically used once  the component has been initialized.\r\n\r\n```js\r\nvar MyComponent = new DOMClass({\r\n  constructor: function () {\r\n    this.textContent = 'Hello World!';\r\n  }\r\n});\r\n\r\ndocument.body.append(new MyComponent);\r\n```\r\n\r\nWhile by default new components will be created name-conflict free, it is possible to specify the desired node name via the `name` property.\r\n\r\n```js\r\nvar XAMe = new DOMClass({\r\n  name: 'x-a-me',\r\n  constructor: function () {\r\n    console.log(this.textContent);\r\n  }\r\n});\r\n\r\n// we can create via new DOMClass\r\n// or we can use the name\r\ndocument.body.innerHTML = '<x-a-me>Hello Again!</x-a-me>';\r\n```\r\n\r\nAll [famous and verbose CustomElement callbacks](http://www.w3.org/TR/custom-elements/#types-of-callbacks) are aliased in a simpler, yet semantic, way.\r\n\r\n```js\r\nvar MyCE = new DOMClass({\r\n\r\n  // equivalent of createdCallback\r\n  // will be invoked after the component will get initialized\r\n  // in case there are mixins or super extends\r\n  constructor: function () {},\r\n\r\n  // equivalent of attachedCallback\r\n  onAttached: function () {},\r\n\r\n  // equivalent of detachedCallback\r\n  onDetached: function () {},\r\n\r\n  // equivalent of attributeChangedCallback\r\n  onChanged: function () {}\r\n\r\n});\r\n```\r\n\r\nIt is possible to style elements per Component, which will eventually also create a `css` property we can use to apply own specific styles.\r\n\r\n```js\r\nvar XSquare = new DOMClass({\r\n  name: 'x-square',\r\n  css: {\r\n    // to self reference the component\r\n    // it is also possible to use just empty selector\r\n    // handy specially when the name is unknown\r\n    'x-square': {\r\n      display: 'block',\r\n      padding: 0,\r\n      width: 32,\r\n      height: 32,\r\n      border: '1px solid black'\r\n    },\r\n    // to reference any element within the component\r\n    // simply use regular CSS selectors\r\n    'span': {\r\n      display: 'inline-block',\r\n      width: '100%',\r\n      lineHeight: 32,\r\n      textAlign: 'center',\r\n      font: {\r\n        size: 26,\r\n        weight: 'bold'\r\n      }\r\n    }\r\n    // mediq queries, animations, and everything else\r\n    // are also supported. Please see `restyle` documentation\r\n  },\r\n  // Yes! DOMClass accepts arguments too \\o/\r\n  constructor: function (text) {\r\n    this.innerHTML = '<span>' + text + '</span>';\r\n    // if there is a css in the prototype,\r\n    // a fresh new restyle object will be assigned at runtime\r\n    this.css.set({\r\n      // empty selector, same as using 'x-square'\r\n      // to reference itself\r\n      '': {\r\n        backgroundColor: 'rgb(' + [\r\n          Math.random() * 256 | 0,\r\n          Math.random() * 256 | 0,\r\n          Math.random() * 256 | 0\r\n        ].join(',') + ')'\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// example\r\ndocument.body.append(new XSquare('!'));\r\ndocument.body.append(new XSquare('A'));\r\ndocument.body.append(new XSquare('Z'));\r\n```\r\n\r\nPlease note there is no ShadowDOM, template, or HTMLImport polyfill, everything works with regular, well supported, HTML5 standards and on  top of [document.registerElement](https://github.com/WebReflection/document-register-element#document-register-element).\r\n\r\n\r\n\r\n### Compatibility\r\n\r\nThe following list of **desktop** browsers has been successfully tested:\r\n\r\n  * Chrome\r\n  * Firefox\r\n  * IE9 or greater\r\n  * Safari\r\n  * Opera\r\n\r\nThe following list of **mobile** OS has been successfully tested:\r\n\r\n  * iOS 5.1 or greater\r\n  * Android 2.2 or greater\r\n  * FirefoxOS 1.1 or greater\r\n  * KindleFire 3 or greater\r\n  * Windows Phone 7 or greater\r\n  * Opera Mobile 12 or greater\r\n  * Blackberry OS 7* and OS 10\r\n  * webOS 2 or LG TV\r\n  * Samsung Bada OS 2 or greater\r\n  * NOKIA Asha with Express Browser\r\n\r\nIf you'd like to know if your browser is supported please check the [live test page](http://webreflection.github.io/dom-class/test/) and let me know if something is not green, thank you.\r\n\r\n\r\n### Which file for what ?\r\n\r\nThe [build folder](https://github.com/WebReflection/dom-class/blob/master/build/) contains all variants, following explained:\r\n\r\n  * **vanilla** `DOMClass` [minified](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.js) or [magnified](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.max.js), both requires [es-class](https://github.com/WebReflection/es-class) and, if used, [restyle](https://github.com/WebReflection/restyle)\r\n  * **browserify** [CommonJS module](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.node.js), which also depends on [es-class](https://github.com/WebReflection/es-class) and [restyle](https://github.com/WebReflection/restyle)\r\n  * **AMD** [module](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.amd.js), which also depends on [es-class](https://github.com/WebReflection/es-class) and [restyle](https://github.com/WebReflection/restyle)\r\n  * **Vitamer JS** [all in one shot](https://github.com/WebReflection/dom-class/blob/master/build/vitamer.js), which also optionally comes with [query-result](https://github.com/WebReflection/query-result) to simplify common DOM manipulation and operations. Such version is called [vitamer-qr.js](https://github.com/WebReflection/dom-class/blob/master/build/vitamer-qr.js)\r\n\r\n\r\n### What is Vitamer JS ?\r\nDirectly [from Wikipedia](https://en.wikipedia.org/wiki/Vitamer):\r\n\r\n> Typically, the vitamin activity of multiple vitamers is due to the body's (limited) ability to convert one vitamer to another, or many vitamers to the same enzymatic cofactor(s), which is active in the body as the important form of the vitamin.\r\n> \r\n> As part of the definition of vitamin, the body cannot completely synthesize an optimal amount of vitamin activity from simple foodstuffs, without some minimal amount of a vitamer molecule as a basis.\r\n\r\nIn this case it's the minimum amount of packages required in order to obtain a modern, comfortable, and cross browser environment based on latest DOM standards and proposals.\r\n\r\nIn this case, the file contains the following module:\r\n\r\n  * IE9 only [quick fix](src/ie-lte-9.js) for [standard timers](http://www.w3.org/TR/2011/WD-html5-20110525/timers.html#timers)\r\n  * the [dom4](https://github.com/WebReflection/dom4) normalizer\r\n  * the [document-register-element](https://github.com/WebReflection/document-register-element) polyfill\r\n  * the powerful and handy [restyle](https://github.com/WebReflection/restyle)\r\n  * the awesome [es-class](https://github.com/WebReflection/es-class), with lightweight traits capability and many other goodies\r\n  * optionally the quick and clean [query-result](https://github.com/WebReflection/query-result) to simplify DOM operations\r\n\r\nFrom vanilla JS world, above package might be truly everything you need in order to create amazing apps, forgetting about cross platform issues or performance gotchas (greedy RAM or CPU operations).\r\n\r\nSince the total package amount, once minified and gzipped, is *less than 9KB*, I thought *Vitamer*, as opposite to the well known *Polymer*,  would have worked as file name. Let me know if you have better name ideas :-)\r\n\r\n\r\n\r\n### License\r\nThe MIT Style License\r\n```\r\nCopyright (C) 2015 by Andrea Giammarchi - @WebReflection\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}