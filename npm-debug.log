0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@2.14.3
3 info using node@v4.0.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/webreflection/code/dom-class',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/webreflection/.npm/dom-class/0.2.1/package.tgz not in flight; packing
9 verbose tar pack [ '/home/webreflection/.npm/dom-class/0.2.1/package.tgz',
9 verbose tar pack   '/home/webreflection/code/dom-class' ]
10 verbose tarball /home/webreflection/.npm/dom-class/0.2.1/package.tgz
11 verbose folder /home/webreflection/code/dom-class
12 info prepublish dom-class@0.2.1
13 verbose addLocalTarball adding from inside cache /home/webreflection/.npm/dom-class/0.2.1/package.tgz
14 silly cache afterAdd dom-class@0.2.1
15 verbose afterAdd /home/webreflection/.npm/dom-class/0.2.1/package/package.json not in flight; writing
16 verbose afterAdd /home/webreflection/.npm/dom-class/0.2.1/package/package.json written
17 silly publish { version: '0.2.1',
17 silly publish   license: 'MIT',
17 silly publish   name: 'dom-class',
17 silly publish   description: 'dom-class [![build status](https://secure.travis-ci.org/WebReflection/dom-class.svg)](http://travis-ci.org/WebReflection/dom-class) =========',
17 silly publish   homepage: 'https://github.com/WebReflection/dom-class',
17 silly publish   keywords:
17 silly publish    [ 'custom',
17 silly publish      'elements',
17 silly publish      'class',
17 silly publish      'vitamer',
17 silly publish      'dom',
17 silly publish      'restyle',
17 silly publish      'es-class' ],
17 silly publish   author:
17 silly publish    { name: 'Andrea Giammarchi',
17 silly publish      url: 'http://webreflection.blogspot.com/' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git://github.com/WebReflection/dom-class.git' },
17 silly publish   main: './build/dom-class.node.js',
17 silly publish   scripts:
17 silly publish    { test: 'phantomjs testrunner.js',
17 silly publish      web: 'node node_modules/tiny-cdn/tiny-cdn run -p=1337',
17 silly publish      'install-global-dev': 'node -e \'(function(o){for(var k in o)require("child_process").spawn("npm",["install","-g",k+"@"+o[k]]).on("exit",console.log.bind(console,k+"@"+o[k]));}(require("package.json").globalDevDependencies))\'' },
17 silly publish   globalDevDependencies:
17 silly publish    { 'uglify-js': '1',
17 silly publish      jshint: '2',
17 silly publish      browserify: '*',
17 silly publish      watchify: '*',
17 silly publish      phantomjs: '*',
17 silly publish      'tiny-cdn': '*' },
17 silly publish   devDependencies:
17 silly publish    { wru: '*',
17 silly publish      'document-register-element': '*',
17 silly publish      dom4: '*',
17 silly publish      'query-result': '*' },
17 silly publish   dependencies: { 'es-class': '*', restyle: '*' },
17 silly publish   readme: 'dom-class [![build status](https://secure.travis-ci.org/WebReflection/dom-class.svg)](http://travis-ci.org/WebReflection/dom-class)\n=========\n\nBuilt on top of [es-class](https://github.com/WebReflection/es-class#es-class-), and integrating handy [restyle](https://github.com/WebReflection/restyle#restyle) features, `DOMClass` is a lightweight, cross browser, simplification of [WebComponents](http://www.w3.org/standards/techs/components#w3c_all).\n\n\nPlease read the [related blog post](https://www.webreflection.co.uk/blog/2015/09/17/simplified-web-components-via-dom-class) to know extra details about this project.\n\n### How To\nAll [es-class features](https://github.com/WebReflection/es-class#features-example) are included, and the `constructor` will be automatically used once  the component has been initialized.\n\n```js\nvar MyComponent = new DOMClass({\n  constructor: function () {\n    this.textContent = \'Hello World!\';\n  }\n});\n\ndocument.body.append(new MyComponent);\n```\n\nWhile by default new components will be created name-conflict free, it is possible to specify the desired node name via the `name` property.\n\n```js\nvar XAMe = new DOMClass({\n  name: \'x-a-me\',\n  constructor: function () {\n    console.log(this.textContent);\n  }\n});\n\n// we can create via new DOMClass\n// or we can use the name\ndocument.body.innerHTML = \'<x-a-me>Hello Again!</x-a-me>\';\n```\n\nAll [famous and verbose CustomElement callbacks](http://www.w3.org/TR/custom-elements/#types-of-callbacks) are aliased in a simpler, yet semantic, way.\n\n```js\nvar MyCE = new DOMClass({\n\n  // equivalent of createdCallback\n  // will be invoked after the component will get initialized\n  // in case there are mixins or super extends\n  constructor: function () {},\n\n  // equivalent of attachedCallback\n  onAttached: function () {},\n\n  // equivalent of detachedCallback\n  onDetached: function () {},\n\n  // equivalent of attributeChangedCallback\n  onChanged: function () {}\n\n});\n```\n\nIt is possible to style elements per Component, which will eventually also create a `css` property we can use to apply own specific styles.\n\n```js\nvar XSquare = new DOMClass({\n  name: \'x-square\',\n  css: {\n    // to self reference the component\n    // it is also possible to use just empty selector\n    // handy specially when the name is unknown\n    \'x-square\': {\n      display: \'block\',\n      padding: 0,\n      width: 32,\n      height: 32,\n      border: \'1px solid black\'\n    },\n    // to reference any element within the component\n    // simply use regular CSS selectors\n    \'span\': {\n      display: \'inline-block\',\n      width: \'100%\',\n      lineHeight: 32,\n      textAlign: \'center\',\n      font: {\n        size: 26,\n        weight: \'bold\'\n      }\n    }\n    // mediq queries, animations, and everything else\n    // are also supported. Please see `restyle` documentation\n  },\n  // Yes! DOMClass accepts arguments too \\o/\n  constructor: function (text) {\n    this.innerHTML = \'<span>\' + text + \'</span>\';\n    // if there is a css in the prototype,\n    // we can use the css property to overwrite/set the inherited one\n    // following is the equivalent of this.css = { ... }\n    this.css.set({\n      // empty selector, same as using \'x-square\'\n      // to reference itself\n      \'\': {\n        backgroundColor: \'rgb(\' + [\n          Math.random() * 256 | 0,\n          Math.random() * 256 | 0,\n          Math.random() * 256 | 0\n        ].join(\',\') + \')\'\n      }\n    });\n  }\n});\n\n// example\ndocument.body.append(new XSquare(\'!\'));\ndocument.body.append(new XSquare(\'A\'));\ndocument.body.append(new XSquare(\'Z\'));\n```\n\nPlease note there is no ShadowDOM, template, or HTMLImport polyfill, everything works with regular, well supported, HTML5 standards and on  top of [document.registerElement](https://github.com/WebReflection/document-register-element#document-register-element).\n\n\n\n### Compatibility\n\nThe following list of **desktop** browsers has been successfully tested:\n\n  * Chrome\n  * Firefox\n  * IE9 or greater\n  * Safari\n  * Opera\n\nThe following list of **mobile** OS has been successfully tested:\n\n  * iOS 5.1 or greater\n  * Android 2.2 or greater\n  * FirefoxOS 1.1 or greater\n  * KindleFire 3 or greater\n  * Windows Phone 7 or greater\n  * Opera Mobile 12 or greater\n  * Blackberry OS 7* and OS 10\n  * webOS 2 or LG TV\n  * Samsung Bada OS 2 or greater\n  * NOKIA Asha with Express Browser\n\nIf you\'d like to know if your browser is supported please check the [live test page](http://webreflection.github.io/dom-class/test/) and let me know if something is not green, thank you.\n\n\n### Which file for what ?\n\nThe [build folder](https://github.com/WebReflection/dom-class/blob/master/build/) contains all variants, following explained:\n\n  * **vanilla** `DOMClass` [minified](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.js) or [magnified](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.max.js), both requires [es-class](https://github.com/WebReflection/es-class) and, if used, [restyle](https://github.com/WebReflection/restyle)\n  * **browserify** [CommonJS module](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.node.js), which also depends on [es-class](https://github.com/WebReflection/es-class) and [restyle](https://github.com/WebReflection/restyle)\n  * **AMD** [module](https://github.com/WebReflection/dom-class/blob/master/build/dom-class.amd.js), which also depends on [es-class](https://github.com/WebReflection/es-class) and [restyle](https://github.com/WebReflection/restyle)\n  * **Vitamer JS** [all in one shot](https://github.com/WebReflection/dom-class/blob/master/build/vitamer.js), which also optionally comes with [query-result](https://github.com/WebReflection/query-result) to simplify common DOM manipulation and operations. Such version is called [vitamer-qr.js](https://github.com/WebReflection/dom-class/blob/master/build/vitamer-qr.js)\n\n\n### What is Vitamer JS ?\nDirectly [from Wikipedia](https://en.wikipedia.org/wiki/Vitamer):\n\n> Typically, the vitamin activity of multiple vitamers is due to the body\'s (limited) ability to convert one vitamer to another, or many vitamers to the same enzymatic cofactor(s), which is active in the body as the important form of the vitamin.\n> \n> As part of the definition of vitamin, the body cannot completely synthesize an optimal amount of vitamin activity from simple foodstuffs, without some minimal amount of a vitamer molecule as a basis.\n\nIn this case it\'s the minimum amount of packages required in order to obtain a modern, comfortable, and cross browser environment based on latest DOM standards and proposals.\n\nThe "_all in  one shot_" file contains the following modules:\n\n  * IE9 only [quick fix](src/ie-lte-9.js) for [standard timers](http://www.w3.org/TR/2011/WD-html5-20110525/timers.html#timers)\n  * the [dom4](https://github.com/WebReflection/dom4) normalizer\n  * the [document-register-element](https://github.com/WebReflection/document-register-element) polyfill\n  * the powerful and handy [restyle](https://github.com/WebReflection/restyle)\n  * the awesome [es-class](https://github.com/WebReflection/es-class), with lightweight traits capability and many other goodies\n  * optionally the quick and clean [query-result](https://github.com/WebReflection/query-result) to simplify DOM operations\n\nFrom vanilla JS world, above package might be truly everything you need in order to create amazing apps, forgetting about cross platform issues or performance gotchas (greedy RAM or CPU operations).\n\nSince the total package amount, once minified and gzipped, is *less than 9KB*, I thought *Vitamer*, as opposite to the well known *Polymer*,  would have worked as file name. Let me know if you have better name ideas :-)\n\n\n\n### License\nThe MIT Style License\n```\nCopyright (C) 2015 by Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '9c156e87428f28250ebfa1d20d1d23283c95a500',
17 silly publish   bugs: { url: 'https://github.com/WebReflection/dom-class/issues' },
17 silly publish   _id: 'dom-class@0.2.1',
17 silly publish   _shasum: '8e38ea0c9c032a0a5310cfd3b8764725940be06c',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name dom-class
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/dom-class
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /home/webreflection/.npm/dom-class/0.2.1/package.tgz
25 verbose request uri https://registry.npmjs.org/dom-class
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 10:59:46 AM
28 verbose request using bearer token for auth
29 verbose request id 38e32d8586e86523
30 http request PUT https://registry.npmjs.org/dom-class
31 http 403 https://registry.npmjs.org/dom-class
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Sat, 19 Sep 2015 09:59:47 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-lcy1123-LCY',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1442656786.510047,VS0,VE1186' }
33 verbose request invalidating /home/webreflection/.npm/registry.npmjs.org/dom-class on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.2.1." : dom-class
35 verbose stack     at makeError (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:263:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:251:14)
35 verbose stack     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:171:14)
35 verbose stack     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1073:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1019:12)
36 verbose statusCode 403
37 verbose pkgid dom-class
38 verbose cwd /home/webreflection/code/dom-class
39 error Linux 4.1.6-1-ARCH
40 error argv "/usr/bin/node" "/usr/bin/npm" "publish"
41 error node v4.0.0
42 error npm  v2.14.3
43 error code E403
44 error "You cannot publish over the previously published version 0.2.1." : dom-class
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
